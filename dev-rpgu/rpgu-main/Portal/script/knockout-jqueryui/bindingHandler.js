define(['jquery','knockout','./utils','jquery-ui/widget'],function($,ko,utils){'use strict';var domDataKey,filterAndUnwrapProperties,subscribeToRefreshOn,BindingHandler;domDataKey='__kojqui_options';filterAndUnwrapProperties=function(source,properties){var result={};ko.utils.arrayForEach(properties,function(property){if(source[property]!==undefined){result[property]=ko.utils.unwrapObservable(source[property]);}});return result;};subscribeToRefreshOn=function(widgetName,element,bindingValue){if(ko.isObservable(bindingValue.refreshOn)){ko.computed({read:function(){bindingValue.refreshOn();$(element)[widgetName]('refresh');},disposeWhenNodeIsRemoved:element});}};BindingHandler=function(widgetName){this.widgetName=widgetName;this.widgetEventPrefix=widgetName;this.options=[];this.events=[];this.after=[];this.hasRefresh=false;};BindingHandler.prototype.init=function(element,valueAccessor,allBindingsAccessor,viewModel,bindingContext){var widgetName,value,unwrappedOptions,unwrappedEvents,shouldApplyBindingsToDescendants;widgetName=this.widgetName;value=valueAccessor();unwrappedOptions=filterAndUnwrapProperties(value,this.options);unwrappedEvents=filterAndUnwrapProperties(value,this.events);shouldApplyBindingsToDescendants=!ko.utils.arrayFirst(utils.descendantControllingBindings,function(bindingName){return this.hasOwnProperty(bindingName);},allBindingsAccessor());if(shouldApplyBindingsToDescendants){ko.applyBindingsToDescendants(bindingContext,element);}ko.utils.domData.set(element,domDataKey,unwrappedOptions);$.each(unwrappedEvents,function(key,value){unwrappedEvents[key]=value.bind(viewModel);});$(element)[widgetName](ko.utils.extend(unwrappedOptions,unwrappedEvents));if(this.hasRefresh){subscribeToRefreshOn(widgetName,element,value);}if(ko.isWriteableObservable(value.widget)){value.widget($(element));}ko.utils.domNodeDisposal.addDisposeCallback(element,function(){$(element)[widgetName]('destroy');});return{controlsDescendantBindings:shouldApplyBindingsToDescendants};};BindingHandler.prototype.update=function(element,valueAccessor){var widgetName,value,oldOptions,newOptions;widgetName=this.widgetName;value=valueAccessor();oldOptions=ko.utils.domData.get(element,domDataKey);newOptions=filterAndUnwrapProperties(value,this.options);$.each(newOptions,function(prop,val){if(val!==oldOptions[prop]){$(element)[widgetName]('option',prop,newOptions[prop]);}});ko.utils.domData.set(element,domDataKey,newOptions);};BindingHandler.prototype.on=function(element,type,callback){var eventName;if(type===this.widgetEventPrefix){eventName=type;}else{eventName=this.widgetEventPrefix+type;}eventName=[eventName.toLowerCase(),'.',this.widgetName].join('');$(element).on(eventName,callback);ko.utils.domNodeDisposal.addDisposeCallback(element,function(){$(element).off(eventName);});};return BindingHandler;});